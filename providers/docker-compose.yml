# Docker Compose for running isolated providers
version: '3.8'

services:
  keycloak-provider:
    build:
      context: ./keycloak-provider
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - PROVIDER_HOST=0.0.0.0
      - PROVIDER_PORT=8000
      - PROVIDER_NAME=keycloak-provider
      - LOG_LEVEL=INFO
      - KEYCLOAK_SERVER_URL=http://keycloak:8080
      - KEYCLOAK_ADMIN_USERNAME=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./keycloak-provider/config:/app/config
      - ./keycloak-provider/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - provider-network

  vm-provider:
    build:
      context: ./vm-provider
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - PROVIDER_HOST=0.0.0.0
      - PROVIDER_PORT=8000
      - PROVIDER_NAME=vm-provider
      - LOG_LEVEL=INFO
    volumes:
      - ./vm-provider/config:/app/config
      - ./vm-provider/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - provider-network

  # Optional: Include Keycloak for testing
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
    command: start-dev
    networks:
      - provider-network

  # Optional: Load balancer for providers
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - keycloak-provider
      - vm-provider
    networks:
      - provider-network

networks:
  provider-network:
    driver: bridge

volumes:
  keycloak-logs:
  vm-logs: